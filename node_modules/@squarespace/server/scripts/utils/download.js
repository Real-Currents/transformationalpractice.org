'use strict';

// Downloads a resource, and places it in a destination folder
// unzipping and untarring in the process.

var fs = require('fs');
var path = require('path');
var zlib = require('zlib');
var urllib = require('url');

var mkdirp = require('mkdirp');
var request = require('request');
var tar = require('tar-fs')

function doStream(url, input, output) {
  return new Promise(function(resolve, reject) {
    function fail(err) {
      console.error('Failed to download from ' + url);
      process.exit(1);
    }
    input
      .on('error', fail)
      .on('end', resolve)
      .pipe(output);
  });
}

module.exports = function(url, destination, untar, unzip, headers) {

  if (untar || unzip) {
    mkdirp.sync(destination);
  }

  var inputStream;
  var reqOptions = {
    url: url,
    headers: headers
  };
  inputStream = request(reqOptions);

  if (unzip) {
    inputStream = inputStream.pipe(zlib.Unzip());
  }

  var outputStream;
  if (untar || unzip) {
    outputStream = tar.extract(destination);
  } else {
    var outputName = path.basename(urllib.parse(url).pathname)
    outputStream = fs.createWriteStream(path.join(destination, outputName));
  }

  return doStream(url, inputStream, outputStream);
}
